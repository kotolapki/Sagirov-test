{"version":3,"sources":["components/RegistrationFields/RegistrationFields.js","components/AutorizationFields/AutorizationFields.js","components/Form/Form.js","components/Popup/Popup.js","App.js","serviceWorker.js","index.js"],"names":["RegistrationFields","props","onFocusCheckboxMoveFocusToLabel","focusCheckboxLabel","checkboxLabel","setCheckboxLabelRef","element","focus","this","telInput","document","querySelector","addEventListener","telInputKeyPressHandler","checkboxLabelKeypressHandler","removeEventListener","e","code","checkbox","checked","startPos","target","selectionStart","previousPos","preventDefault","value","setSelectionRange","setRangeText","targetPos","className","htmlFor","type","name","id","minLength","maxLength","pattern","autoComplete","required","onFocus","onFocusInput","onBlur","onBlurInput","onSelect","onSelectTelInput","onFocusTelInput","onClick","onClickTelInput","onChange","onChangeTelInput","onBlurTelInput","aria-label","tabIndex","onClickChangePasswordVisibility","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ref","React","Component","AutorizationFields","Form","onFocusMoveInputlabel","previousSibling","classList","add","targetItem","index","indexOf","label","contains","remove","removeAttribute","onSelectStartTelInput","nextPos","getSelection","toString","length","removeAllRanges","setState","tel","onBlurMoveInputLabel","stopPropagation","passwordInput","getElementById","setAttribute","onClickChangeRegistrationStatus","changeRegistrationStatus","onSubmit","reset","method","header","registrationStatus","submitBtnText","style","paddingLeft","askingBlockPaddingLeft","askingText","askingBtn","Popup","message","App","onSubmitForm","changePopupVisibility","prevState","popupVisibility","state","form","login","elements","password","localStorage","getItem","userData","JSON","parse","signInStatus","setTimeout","alert","userInformation","username","nickname","email","replace","stringify","setItem","formHeader","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a094de80.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\n\r\nclass RegistrationFields extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkboxLabel = null;\r\n\r\n    this.setCheckboxLabelRef = element => {\r\n      this.checkboxLabel = element;\r\n    }\r\n\r\n    this.focusCheckboxLabel = () => {\r\n      if (this.checkboxLabel) this.checkboxLabel.focus();\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.telInput = document.querySelector('#tel');\r\n    this.telInput.addEventListener('keydown', this.telInputKeyPressHandler);\r\n    \r\n    this.checkboxLabel = document.querySelector('.form__agreement-label');\r\n    this.checkboxLabel.addEventListener('keydown',this.checkboxLabelKeypressHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.telInput.removeEventListener('keydown', this.telInputKeyPressHandler);\r\n    this.checkboxLabel.removeEventListener('keydown', this.checkboxLabelKeypressHandler);\r\n  }\r\n\r\n  checkboxLabelKeypressHandler(e) {\r\n    if (e.code === 'Enter') {\r\n      this.checkbox = document.querySelector('#checkbox');\r\n      this.checkbox.checked = !this.checkbox.checked;\r\n    }\r\n  }\r\n\r\n  onFocusCheckboxMoveFocusToLabel = () => {\r\n    this.focusCheckboxLabel();\r\n  }\r\n\r\n  telInputKeyPressHandler(e) {\r\n    const startPos = e.target.selectionStart;\r\n    const previousPos = startPos - 1;\r\n\r\n    if (e.code === 'Backspace') {\r\n      e.preventDefault();\r\n\r\n      if (e.target.value[previousPos] === ' ' && previousPos <= 3) {\r\n        e.target.setSelectionRange(3, 3);\r\n      } else if (e.target.value[previousPos] === ' ') {\r\n        e.target.setSelectionRange(previousPos - 1, previousPos - 1);\r\n        e.target.setRangeText('_', previousPos - 1, startPos - 1, 'start');\r\n      } else {\r\n        e.target.setRangeText('_', previousPos, startPos, 'start');\r\n      }\r\n    } else if (e.code === 'Space') {\r\n      e.preventDefault();\r\n    } else if (e.code === 'ArrowLeft' && startPos < 4) {\r\n      e.target.setSelectionRange(3, 3);\r\n    } else if (e.code === 'ArrowLeft' && e.target.value[startPos - 1] === ' ') {\r\n      e.preventDefault();\r\n      let targetPos = startPos - 2;\r\n      e.target.setSelectionRange(targetPos, targetPos);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='form__container'>\r\n        <ul className='form__list'>\r\n          <li className='form__item'>\r\n            <label className='form__label' htmlFor='name'>Имя</label>\r\n            <input \r\n              className='form__input' \r\n              type='text' \r\n              name='name' \r\n              id='name' \r\n              minLength='2'\r\n              maxLength='25'\r\n              pattern='[А-Яа-яЁё]{2,}'\r\n              autoComplete='off' \r\n              required\r\n              onFocus={this.props.onFocusInput}\r\n              onBlur={this.props.onBlurInput}\r\n            />\r\n          </li>\r\n          <li className='form__item'>\r\n            <label className='form__label' htmlFor='nickname'>Никнейм</label>\r\n            <input \r\n              className='form__input' \r\n              type='text' \r\n              name='nickname' \r\n              id='nickname' \r\n              minLength='2'\r\n              maxLength='25'\r\n              pattern='[A-Za-z]{2,}'\r\n              autoComplete='off' \r\n              required \r\n              onFocus={this.props.onFocusInput}\r\n              onBlur={this.props.onBlurInput}\r\n            />\r\n          </li>\r\n          <li className='form__item'>\r\n            <label className='form__label' htmlFor='email'>Email</label>\r\n            <input \r\n              className='form__input' \r\n              type='email' \r\n              name='email' \r\n              id='email' \r\n              maxLength='40'\r\n              autoComplete='off'\r\n              required \r\n              onFocus={this.props.onFocusInput}\r\n              onBlur={this.props.onBlurInput}\r\n            />\r\n          </li>\r\n          <li className='form__item'>\r\n            <label className='form__label' htmlFor='tel'>Телефон</label>\r\n            <input \r\n              className='form__input' \r\n              type='tel' \r\n              name='tel' \r\n              id='tel' \r\n              minLength='17'\r\n              pattern='\\+[0-9]{1,}\\s[0-9]{3,}\\s[0-9]{3,}\\s[0-9]{2,}\\s[0-9]{2,}' \r\n              autoComplete='off' \r\n              required \r\n              onSelect={this.props.onSelectTelInput}\r\n              onFocus={this.props.onFocusTelInput}\r\n              onClick={this.props.onClickTelInput}\r\n              onChange={this.props.onChangeTelInput}\r\n              onBlur={this.props.onBlurTelInput}\r\n            />\r\n          </li>\r\n          <li className='form__item'>\r\n            <label className='form__label' htmlFor='password'>Пароль</label>\r\n            <input \r\n              className='form__input' \r\n              type='password' \r\n              name='password' \r\n              id='password' \r\n              minLength='8'\r\n              maxLength='25'\r\n              pattern='(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$'\r\n              autoComplete='off' \r\n              required \r\n              onFocus={this.props.onFocusInput}\r\n              onBlur={this.props.onBlurInput}\r\n            />\r\n            <button \r\n              className='form__password-btn' \r\n              aria-label='Показать или скрыть пароль' \r\n              type='button' \r\n              tabIndex='0'\r\n              onClick={this.props.onClickChangePasswordVisibility}\r\n            >\r\n              <svg width=\"19\" height=\"14\" viewBox=\"0 0 19 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M12.1134 6.9999C12.1134 7.68188 11.8425 8.33593 11.3603 8.81817C10.878 9.30041 10.224 9.57132 9.54201 9.57132C8.86002 9.57132 8.20597 9.30041 7.72373 8.81817C7.2415 8.33593 6.97058 7.68188 6.97058 6.9999C6.97058 6.31791 7.2415 5.66386 7.72373 5.18162C8.20597 4.69938 8.86002 4.42847 9.54201 4.42847C10.224 4.42847 10.878 4.69938 11.3603 5.18162C11.8425 5.66386 12.1134 6.31791 12.1134 6.9999V6.9999Z\" stroke=\"#C4C4C4\"  strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                <path d=\"M1.36316 7C2.45516 3.52257 5.70459 1 9.54202 1C13.3803 1 16.6289 3.52257 17.7209 7C16.6289 10.4774 13.3803 13 9.54202 13C5.70459 13 2.45516 10.4774 1.36316 7V7Z\" stroke=\"#C4C4C4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <div className='form__agreement-wrapper'>\r\n          <input \r\n            className='form__agreement-checkbox visuallyhidden' \r\n            type='checkbox' \r\n            name='checkbox' \r\n            id='checkbox' \r\n            tabIndex='-1'\r\n            onFocus={this.focusCheckboxLabel}\r\n            required\r\n          />\r\n          <label className='form__agreement-label' tabIndex='0' htmlFor='checkbox' ref={this.setCheckboxLabelRef}>Я даю свое согласие на обработку персональных данных</label>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegistrationFields;","import React from 'react';\r\nimport './styles.css';\r\n\r\nfunction AutorizationFields(props) {\r\n  return (\r\n    <ul className='form__list'>\r\n      <li className='form__item'>\r\n        <label className='form__label' htmlFor='name'>Email или номер телефона</label>\r\n        <input \r\n          className='form__input' \r\n          type='text' \r\n          name='name' \r\n          id='name' \r\n          minLength='3'\r\n          maxLength='40'\r\n          autoComplete='off' \r\n          required\r\n          onFocus={props.onFocusInput}\r\n          onBlur={props.onBlurInput}\r\n        />\r\n      </li>\r\n      <li className='form__item'>\r\n        <label className='form__label' htmlFor='password'>Пароль</label>\r\n        <input \r\n          className='form__input' \r\n          type='password' \r\n          name='password' \r\n          id='password' \r\n          minLength='8'\r\n          pattern='(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$'\r\n          autoComplete='off' \r\n          required \r\n          onFocus={props.onFocusInput}\r\n          onBlur={props.onBlurInput}\r\n        />\r\n        <button className='form__password-btn' aria-label='Показать или скрыть пароль' type='button'  onClick={props.onClickChangePasswordVisibility}>\r\n          <svg width=\"19\" height=\"14\" viewBox=\"0 0 19 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M12.1134 6.9999C12.1134 7.68188 11.8425 8.33593 11.3603 8.81817C10.878 9.30041 10.224 9.57132 9.54201 9.57132C8.86002 9.57132 8.20597 9.30041 7.72373 8.81817C7.2415 8.33593 6.97058 7.68188 6.97058 6.9999C6.97058 6.31791 7.2415 5.66386 7.72373 5.18162C8.20597 4.69938 8.86002 4.42847 9.54201 4.42847C10.224 4.42847 10.878 4.69938 11.3603 5.18162C11.8425 5.66386 12.1134 6.31791 12.1134 6.9999V6.9999Z\" stroke=\"#C4C4C4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n            <path d=\"M1.36316 7C2.45516 3.52257 5.70459 1 9.54202 1C13.3803 1 16.6289 3.52257 17.7209 7C16.6289 10.4774 13.3803 13 9.54202 13C5.70459 13 2.45516 10.4774 1.36316 7V7Z\" stroke=\"#C4C4C4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default AutorizationFields;","import React from 'react';\r\nimport './styles.css';\r\nimport RegistrationFields from '../RegistrationFields';\r\nimport AutorizationFields from '../AutorizationFields';\r\n\r\nclass Form extends React.Component {\r\n  onFocusMoveInputlabel = (e) => {\r\n    const targetItem = e.target;\r\n    const label = targetItem.previousSibling;\r\n\r\n    label.classList.add('form__label--changed');\r\n  }\r\n\r\n  onFocusTelInput = (e) => {\r\n    const targetItem = e.target;\r\n    const label = targetItem.previousSibling;\r\n\r\n    label.classList.add('form__label--changed');\r\n\r\n    if (!targetItem.value) {\r\n      targetItem.value = '+7 ___ ___ __ __';\r\n      e.target.setSelectionRange(3,3);\r\n    } else {\r\n      let index = targetItem.value.indexOf('_');\r\n\r\n      if (index === -1) {\r\n        e.target.setSelectionRange(16,16);\r\n      } else {\r\n        e.target.setSelectionRange(index, index);\r\n      }\r\n    }\r\n  }\r\n\r\n  onBlurTelInput = (e) => {\r\n    const targetItem = e.target;\r\n    const label = targetItem.previousSibling;\r\n\r\n    if (label.classList.contains('form__label--changed') && targetItem.value === '+7 ___ ___ __ __') {\r\n      label.classList.remove('form__label--changed');\r\n      targetItem.removeAttribute('placeholder');\r\n      targetItem.value = '';\r\n    }\r\n  }\r\n\r\n  onClickTelInput = (e) => {\r\n    let startPos = e.target.selectionStart;\r\n    if (startPos === 0 || startPos === 1 || startPos === 2) {\r\n      e.target.setSelectionRange(3,3);\r\n    }\r\n  }\r\n\r\n  onSelectStartTelInput = (e) => {\r\n    let startPos = e.target.selectionStart;\r\n    let nextPos = startPos + 1;\r\n\r\n    if (e.target.value[startPos] === ' ') {\r\n      e.target.setSelectionRange(nextPos, nextPos);\r\n    }\r\n\r\n    if (startPos === 0) {\r\n      e.target.setSelectionRange(3, 3);\r\n    }\r\n\r\n    if (document.getSelection().toString().length > 1) { \r\n      document.getSelection().removeAllRanges();\r\n      e.target.setSelectionRange(startPos, startPos);\r\n    }\r\n\r\n    if (startPos === 17) {\r\n      e.target.setRangeText('', startPos - 1, startPos, 'start');\r\n      this.setState({tel: e.target.value});\r\n    }\r\n  }\r\n\r\n  onChangeTelInput = (e) => {\r\n    let startPos = e.target.selectionStart;\r\n    let nextPos = startPos + 1;\r\n    \r\n    e.target.setRangeText('', startPos, nextPos, 'start');\r\n\r\n    if (e.target.value[startPos] === ' ') {\r\n      e.target.setSelectionRange(nextPos, nextPos);\r\n    }\r\n  }\r\n\r\n  onBlurMoveInputLabel = (e) => {\r\n    const targetItem = e.target;\r\n    const label = targetItem.previousSibling;\r\n\r\n    if (label.classList.contains('form__label--changed') && !targetItem.value) {\r\n      label.classList.remove('form__label--changed');\r\n    }\r\n  }\r\n\r\n  onClickChangePasswordVisibility = (e) => {\r\n    e.stopPropagation();\r\n    const passwordInput = document.getElementById('password');\r\n\r\n    if (passwordInput.value !== '' && passwordInput.type === 'password') {\r\n      passwordInput.setAttribute('type', 'text');\r\n    } else {\r\n      passwordInput.setAttribute('type', 'password');\r\n    }\r\n  }\r\n\r\n  onClickChangeRegistrationStatus = () => {\r\n    this.setState({tel: ''});\r\n    this.props.changeRegistrationStatus();\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit();\r\n    e.target.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='form-wrapper'>\r\n        <form className='form' method='post' onSubmit={this.onSubmit}>\r\n          <fieldset className='form__fieldset'>\r\n            <legend className='form__legend'>{this.props.header}</legend>\r\n            <p className='form__clarification-text'>Введите свои данные</p>\r\n            {this.props.registrationStatus? (\r\n              <AutorizationFields\r\n                onFocusInput={this.onFocusMoveInputlabel}\r\n                onBlurInput={this.onBlurMoveInputLabel}\r\n                onClickChangePasswordVisibility={this.onClickChangePasswordVisibility}\r\n              />\r\n              ) : (\r\n              <RegistrationFields\r\n                onFocusInput={this.onFocusMoveInputlabel}\r\n                onBlurInput={this.onBlurMoveInputLabel}\r\n                onSelectTelInput={this.onSelectStartTelInput}\r\n                onFocusTelInput={this.onFocusTelInput}\r\n                onBlurTelInput={this.onBlurTelInput}\r\n                onClickTelInput={this.onClickTelInput}\r\n                onChangeTelInput={this.onChangeTelInput}\r\n                onClickChangePasswordVisibility={this.onClickChangePasswordVisibility}\r\n              />\r\n            )}\r\n          </fieldset>\r\n          <button className='form__submit-btn'>{this.props.submitBtnText}</button>\r\n        </form>\r\n        <div className='asking-block' style={{paddingLeft: this.props.askingBlockPaddingLeft}}>\r\n          <p className='asking-block__text'>{this.props.askingText}</p>\r\n          <button className='asking-block__button' type='button' onClick={this.onClickChangeRegistrationStatus}>{this.props.askingBtn}</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './styles.css';\r\n\r\nclass Popup extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='popup'>\r\n        <div className='popup__container'>\r\n          <svg className='popup__image' width=\"212\" height=\"212\" viewBox=\"0 0 212 212\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M106 13.25C54.7805 13.25 13.25 54.7805 13.25 106C13.25 157.22 54.7805 198.75 106 198.75C157.22 198.75 198.75 157.22 198.75 106C198.75 54.7805 157.22 13.25 106 13.25ZM146.061 75.7113L102.46 136.164C101.85 137.015 101.047 137.708 100.116 138.186C99.1856 138.664 98.1543 138.914 97.108 138.914C96.0617 138.914 95.0304 138.664 94.0997 138.186C93.169 137.708 92.3656 137.015 91.7563 136.164L65.9395 100.389C65.1527 99.2922 65.9395 97.7602 67.2852 97.7602H76.9949C79.1066 97.7602 81.1148 98.7746 82.357 100.514L97.0977 120.968L129.643 75.8355C130.885 74.1172 132.873 73.082 135.005 73.082H144.715C146.061 73.082 146.847 74.6141 146.061 75.7113Z\" fill=\"black\"/>\r\n          </svg>\r\n          <p className='popup__message'>{this.props.message}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Popup;","import React from 'react';\nimport './reset.css';\nimport './app.css';\nimport Form from './components/Form';\nimport Popup from './components/Popup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registrationStatus: false,\n      signInStatus: false,\n      popupVisibility: false,\n    }\n  }\n\n  onSubmitForm = () => {\n    let changePopupVisibility = () => {\n      this.setState(prevState => ({popupVisibility: !prevState.popupVisibility}));\n    }\n\n    if (!this.state.registrationStatus) {\n      const form = document.querySelector('.form');\n\n      let userInformation = {\n        username: form.elements[1].value,\n        nickname: form.elements[2].value,\n        email: form.elements[3].value,\n        tel: form.elements[4].value.replace(/\\s/g, ''),\n        password: form.elements[5].value\n      }\n\n      const email = userInformation.email;\n      const tel = userInformation.tel;\n  \n      userInformation = JSON.stringify(userInformation);\n  \n      localStorage.setItem(`${email}`, userInformation);\n      localStorage.setItem(`${tel}`, userInformation);\n      \n      this.setState(prevState => ({registrationStatus: !prevState.registrationStatus}));\n      this.setState(prevState => ({popupVisibility: !prevState.popupVisibility}));\n      setTimeout(changePopupVisibility, 1500);\n    } else {\n      const form = document.querySelector('.form');\n      const login = form.elements[1].value;\n      const password = form.elements[2].value;\n\n      if (localStorage.getItem(`${login}`)) {\n        let userData = localStorage.getItem(`${login}`);\n        userData = JSON.parse(userData);\n\n        if (userData.password === password) {\n          this.setState(prevState => ({signInStatus: !prevState.signInStatus}));\n          this.setState(prevState => ({popupVisibility: !prevState.popupVisibility}));\n          setTimeout(changePopupVisibility, 2000);\n        } else {\n          alert('Неверно введенные данные');\n        }\n\n      } else {\n        alert('Данные пользователя не найдены');\n      }\n    }\n  }\n\n  changeRegistrationStatus = () => {\n    this.setState(prevState => ({registrationStatus: !prevState.registrationStatus}));\n  }\n\n  render() {\n    let formHeader;\n    let submitBtnText;\n    let askingText;\n    let askingBtn;\n    let message;\n    let askingBlockPaddingLeft;\n\n    if (!this.state.registrationStatus) {\n      formHeader = 'Регистрация';\n      submitBtnText = 'Зарегистрироваться';\n      askingText = 'Есть аккаунт?';\n      askingBtn = 'Войти';\n      message = '';\n    } else {\n      formHeader = 'Вход';\n      submitBtnText = 'Войти';\n      askingText = 'Нет аккаунта?';\n      askingBtn = 'Зарегистрироваться';\n      message = 'Вы зарегистрированы';\n    }\n\n    if (this.state.signInStatus) {\n      message = 'Вы авторизованы';\n    }\n\n    if (!this.state.registrationStatus) {\n      askingBlockPaddingLeft = '105px';\n    } else {\n      askingBlockPaddingLeft = '43px';\n    }\n\n    return (\n      <div className='app-container'>\n        <Form \n          header={formHeader}\n          submitBtnText={submitBtnText}\n          askingText={askingText}\n          askingBtn={askingBtn} \n          onSubmit={this.onSubmitForm} \n          registrationStatus={this.state.registrationStatus}\n          signInStatus={this.state.signInStatus}\n          changeRegistrationStatus={this.changeRegistrationStatus}\n          askingBlockPaddingLeft={askingBlockPaddingLeft}\n        />\n        {this.state.popupVisibility && <Popup message={message}/>}\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}